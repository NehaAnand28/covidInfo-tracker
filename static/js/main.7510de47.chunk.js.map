{"version":3,"sources":["components/Chart/Chart.module.css","components/CountryPicker/CountryPicker.module.css","components/Cards/Cards.module.css","components/Cards/Cards.jsx","api/index.js","components/Chart/Chart.jsx","components/CountryPicker/CountryPicker.jsx","images/image.png","App.js","index.js","App.module.css"],"names":["module","exports","Cards","data","confirmed","recovered","deaths","lastUpdate","className","styles","container","Grid","spacing","justify","item","component","Card","xs","md","cx","card","infected","CardContent","Typography","color","gutterBottom","variant","start","end","value","duration","separator","Date","toDateString","url","fetchData","country","a","changeableUrl","axios","get","console","log","fetchDailyData","modifiedData","map","dailyData","total","date","reportDate","fetchCountries","countries","name","Chart","useState","setDailyData","useEffect","fetchMyAPI","lineChart","labels","datasets","label","borderColor","fill","backgroundColor","barChart","borderWidth","options","legend","display","title","text","CountryPicker","handleCountryChange","fetchedCountries","setFetchedcountries","fetchAPI","FormControl","formControl","NativeSelect","defaultValue","onChange","e","target","i","App","state","fetchedData","setState","this","image","src","coronaImg","alt","React","Component","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.7510de47.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Chart_container__c4jOd\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"formControl\":\"CountryPicker_formControl__3HzsJ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Cards_container__2GmMU\",\"card\":\"Cards_card__1LCHh\",\"infected\":\"Cards_infected__wIV-L\",\"recovered\":\"Cards_recovered__3fFRb\",\"deaths\":\"Cards_deaths__3E-Xc\"};","import React from 'react';\r\nimport {Card, CardContent, Typography, Grid } from '@material-ui/core';\r\nimport CountUp  from 'react-countup';\r\nimport styles from './Cards.module.css';\r\nimport cx from 'classnames'//for multiple classes\r\n\r\nconst Cards = ({data: {confirmed, recovered, deaths , lastUpdate}}) => {\r\n    // console.log(props);\r\n    if(!confirmed)\r\n    {\r\n        return 'Loading....';\r\n    }\r\n    return (\r\n        <div  className={styles.container}>\r\n            <Grid container spacing={3} justify=\"center\">\r\n                <Grid item component={Card} xs={12} md={3} className={cx(styles.card, styles.infected)}>\r\n                    <CardContent>\r\n                        <Typography color=\"textSecondrary\" gutterBottom>Infected</Typography>\r\n                        <Typography variant=\"h5\">\r\n                            <CountUp start={0} end={confirmed.value} duration={2.5} separator=\",\" />\r\n                        </Typography>\r\n                        <Typography color=\"textSecondrary\">{new Date(lastUpdate).toDateString()}</Typography>\r\n                        <Typography variant=\"body2\">Number of active cases of COVID-19</Typography>\r\n                    </CardContent>\r\n                </Grid>\r\n                <Grid item component={Card} xs={12} md={3} className={cx(styles.card, styles.recovered)}>\r\n                    <CardContent>\r\n                        <Typography color=\"textSecondrary\" gutterBottom>Recovered</Typography>\r\n                        <Typography variant=\"h5\">\r\n                            <CountUp start={0} end={recovered.value} duration={2.5} separator=\",\" />\r\n                        </Typography>\r\n                        <Typography color=\"textSecondrary\">{new Date(lastUpdate).toDateString()}</Typography>\r\n                        <Typography variant=\"body2\">Number of recoveries from COVID-19</Typography>\r\n                    </CardContent>\r\n                </Grid>\r\n                <Grid item component={Card} xs={12} md={3} className={cx(styles.card, styles.deaths)}>\r\n                    <CardContent>\r\n                        <Typography color=\"textSecondrary\" gutterBottom>Deaths</Typography>\r\n                        <Typography variant=\"h5\">\r\n                            <CountUp start={0} end={deaths.value} duration={2.5} separator=\",\" />\r\n                        </Typography>\r\n                        <Typography color=\"textSecondrary\">{new Date(lastUpdate).toDateString()}</Typography>\r\n                        <Typography variant=\"body2\">Number of deaths caused by COVID-19</Typography>\r\n                    </CardContent>\r\n                </Grid>\r\n            </Grid>\r\n        </div>\r\n    )\r\n}\r\n export default Cards;","import axios from 'axios';\r\n\r\nconst url = 'https://covid19.mathdro.id/api';\r\n\r\nexport const fetchData = async (country) => {\r\n    let changeableUrl = url;\r\n    if(country)\r\n    {\r\n        changeableUrl =`${url}/countries/${country}`\r\n    }\r\n    try{\r\n        const { data: {confirmed, recovered, deaths, lastUpdate} } = await axios.get(changeableUrl);\r\n        \r\n        return {confirmed, recovered, deaths, lastUpdate};\r\n\r\n    } catch (error) {\r\n        console.log(error);\r\n    }\r\n}\r\n\r\nexport const fetchDailyData = async () => {\r\n    try{\r\n        const {data} = await axios.get(`${url}/daily`);\r\n        const modifiedData = data.map((dailyData) => ({\r\n            confirmed: dailyData.confirmed.total,\r\n            deaths: dailyData.deaths.total,\r\n            date: dailyData.reportDate,\r\n        }));\r\n        return modifiedData;\r\n    }catch(error){\r\n\r\n    }\r\n}\r\n\r\nexport const fetchCountries = async () => {\r\n    try{\r\n        const {data : {countries}} = await axios.get(`${url}/countries`);\r\n        // console.log(response);\r\n        return countries.map((country) => country.name);\r\n\r\n    }catch(error){\r\n        console.log(error);\r\n    }\r\n}","import React,{useState,useEffect} from 'react';\r\nimport { fetchDailyData } from '../../api';\r\nimport {Line, Bar} from 'react-chartjs-2';\r\nimport styles from './Chart.module.css';\r\n\r\n\r\nconst Chart = ({data : {confirmed,recovered,deaths},country}) => {\r\n    const [dailyData,setDailyData] = useState([]);\r\n\r\n    useEffect(() => {\r\n        const fetchMyAPI = async () => {\r\n            setDailyData(await fetchDailyData());\r\n        }\r\n\r\n        fetchMyAPI();\r\n    },[]);\r\n\r\n    const lineChart = (\r\n        dailyData\r\n        ? (<Line \r\n            data={{\r\n                labels: dailyData.map(({date}) => date),\r\n                datasets: [{\r\n                    data:dailyData.map(({confirmed}) => confirmed ),\r\n                    label:'Infected',\r\n                    borderColor:'#3333ff',\r\n                    fill: true,\r\n                },{\r\n                    data:dailyData.map(({deaths}) => deaths ),\r\n                    label:'Deaths',\r\n                    borderColor:'red',\r\n                    backgroundColor:'rgba(255,0,0,0.5)',\r\n                    fill: true,\r\n                }],\r\n            }}\r\n        />) : null\r\n    );\r\n    console.log(confirmed,recovered,deaths);\r\n    const barChart = (\r\n        confirmed \r\n        ? ( \r\n        <Bar\r\n            data = { {\r\n                labels: ['Infected','Recovered','Deaths'],\r\n                datasets:[{\r\n                    label:'People',\r\n                    backgroundColor:['rgba(0,0,255,0.5)','rgba(0,255,0,0.5)','rgba(255,0,0,0.5)'],\r\n                    borderColor:['rgba(0,0,255,1)','rgba(0,255,0,1)','rgba(255,0,0,1)'],\r\n                    borderWidth: 0.5,\r\n                    data:[confirmed.value,recovered.value,deaths.value],\r\n                },],\r\n               \r\n            }}\r\n            options={{\r\n                legend : {display : false},\r\n                title: {display : true, text : `Current state in ${country}` },\r\n            }}\r\n        />\r\n        ) :null\r\n    );\r\n    return (\r\n        <div className={styles.container}>\r\n            {country ? barChart : lineChart}\r\n        </div>\r\n    );\r\n};\r\n export default Chart;\r\n","import React,{useState,useEffect} from 'react';\r\nimport { NativeSelect, FormControl } from '@material-ui/core';\r\nimport styles from './CountryPicker.module.css';\r\nimport { fetchCountries } from '../../api';\r\n\r\nconst CountryPicker = ({handleCountryChange}) => {\r\n    const [fetchedCountries,setFetchedcountries] = useState([]);\r\n\r\n    useEffect(() =>{\r\n        const fetchAPI = async () => {\r\n            setFetchedcountries(await fetchCountries());\r\n        }\r\n\r\n        fetchAPI();\r\n    } ,[setFetchedcountries]);\r\n    \r\n    console.log(fetchedCountries);\r\n\r\n    return (\r\n        <FormControl className={styles.formControl}>\r\n            <NativeSelect defaultValue=\"\" onChange={(e) => handleCountryChange(e.target.value)}>\r\n                <option value=\"\">Global</option>\r\n                {fetchedCountries.map((country ,i) => <option key={i} value={country}>{country}</option>)}\r\n            </NativeSelect>\r\n        </FormControl>\r\n    )\r\n}\r\n export default CountryPicker;","export default __webpack_public_path__ + \"static/media/image.9e5d4fc7.png\";","import React from 'react';\r\n\r\nimport { Cards, Chart, CountryPicker } from \"./components\";\r\nimport styles from './App.module.css';\r\nimport { fetchData ,fetchDailyData} from './api';\r\nimport coronaImg from './images/image.png';\r\n\r\nclass App extends React.Component {\r\n    state = {\r\n        data: {},\r\n        country:'',\r\n    }\r\n    async componentDidMount() {\r\n        const fetchedData = await fetchData();\r\n        // console.log(fetchedData);\r\n\r\n        this.setState({data : fetchedData});\r\n    }\r\n    handleCountryChange = async ( country ) => {\r\n         const fetchedData = await fetchData(country);\r\n        console.log(fetchedData);\r\n        this.setState({data:fetchedData, country:country});\r\n        \r\n    }\r\n    render() {\r\n        const {data, country} = this.state;\r\n\r\n        return (\r\n            <div className={styles.container}>\r\n                <img className={styles.image} src={coronaImg} alt={\"covid\"}/>\r\n                <Cards data={data}/>\r\n                <CountryPicker handleCountryChange={this.handleCountryChange}/>\r\n                <Chart data={data} country={country}/>\r\n               \r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default App;","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\n\r\nimport App from './App'\r\n\r\nReactDOM.render(<App />, document.getElementById(\"root\"));\r\n\r\n\r\n\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"App_container__3YVS8\",\"image\":\"App_image__1ddrz\"};"],"sourceRoot":""}